#!/usr/bin/perl -w

use strict;
use warnings;
use 5.006;

# Make sure we have the proper dependencies installed
my @deps = qw(
  Net::SAPO::Broker
  Getopt::Long
);

foreach my $module (@deps) {
	eval "require $module; import $module ();";
	if ($@) {
	  my $mesg = <<"    OOPS";
	    ERROR: You seem to be missing the '$module' module.
	    
	    Unfortunately I require that module to do my job. Use:

	      cpan $module
	      
	    to install it.
    OOPS
    _write_err_mesg($mesg);
    exit(1);
	}
}

# Parse command line

my ($subscribe, $publish);
my $ok = GetOptions(
  "subscribe" => \$subscribe,
  "publish"   => \$publish,
);

usage() unless $ok;
usage("One off 'subscribe' or 'publish' must be used")
  unless $subscribe || $publish;
usage("Only one off 'subscribe' or 'publish' can be used")
  if $subscribe && $publish;
usage("Need set of topics to publish/subscribe to") unless @ARGV;

# Start a SAPO Broker connection
my $sb = Net::SAPO::Broker->new;

# Run the proper role
if ($subscribe) {
  subscriber($sb, @ARGV);
}
else {
  publisher($sb, @ARGV);
}


### Roles

sub subscriber {
  my $sb = shift;
  
  foreach my $topic (@_) {
    $sb->subscribe({
      topic      => $topic,
      on_message => sub {
        my (undef, $payload, $topic) = @_;
        
        print <<"        REPORT";
**** Got message on topic '$topic':
--- START ---
$payload
---- END ---

        REPORT
      }
    })
  }
  
  # Temp hack, deliver_messages() should wait forever
  while (1) { $sb->deliver_messages(5) };
}

sub publisher {}


### Usage

sub usage {
  my ($mesg) = @_;
  
  print STDERR "ERROR: $mesg\n" if $mesg;
  _write_err_mesg(<<"  USAGE");
    Usage: sapo-broker-client --subcribe | --publish topic [topic...]
    
      --subscribe   prints new messages from any of the topics
      --publish     sends each non-empty lines from stdin to all the topics
  USAGE
  exit(1);
}

sub _write_err_mesg {
  my ($mesg) = @_;
  
  my ($prefix) = $mesg =~ /^(\s+)/;
  $mesg =~ s/^$prefix//gsm;
  print STDERR "\n",$mesg,"\n";
}